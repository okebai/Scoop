var Scoop;(function(n){var t=function(){function n(n){var t=this;this.updateConnections=function(){t.connectionService.getConnections().done(function(n){var i=ko.viewmodel.fromModel(n,{extend:{"{root}[i]":function(n){n.isConnected=ko.observable(!1);n.currentHubConnection=null;n.chosenTasks=ko.observableArray([])}}});t.connections.remove(function(n){return $.grep(i(),function(t){return t.guid()==n.guid()}).length==0});$.each(i(),function(n,i){t.connectionService.getAvailableTasks(i).done(function(n){var f=$.map(n,function(n){var i=null,r;return t.tasksCache[n.guid]?i=t.tasksCache[n.guid]:n.name!=null&&(r=stringToFunction("Scoop."+n.name),r&&(i=new r)),i}),r=ko.observableArray(f),u=$.grep(t.connections(),function(n){return n.guid()==i.guid()});u.length?$.each(u,function(n,t){t.autoConnect(i.autoConnect());t.name(i.name());t.uri(i.uri());t.availableTasks=r;t.chosenTasks=ko.observableArray($.map(t.chosenTasks(),function(n){return $.grep(r(),function(t){return t.guid==n.guid}).length?n:null}))}):(i.availableTasks=r,i.chosenTasks=r,t.connections.push(i))})})})};this.addConnection=function(){console.log("addConnection",t.newConnection.uri());t.connectionService.addConnection(t.newConnection).done(function(){t.updateConnections()})};this.connect=function(n){console.log("connect",n);t.connectionService.connect(n).done(function(){n.isConnected(!0)})};this.disconnect=function(n){console.log("disconnect");t.connectionService.disconnect(n);n.isConnected(!1)};this.connectionService=n;this.newConnection=ko.viewmodel.fromModel({uri:"",name:"",autoConnect:!1});this.connections=ko.observableArray([]);this.tasksCache={};this.updateConnections()}return n}();n.ConnectionViewModel=t})(Scoop||(Scoop={}));